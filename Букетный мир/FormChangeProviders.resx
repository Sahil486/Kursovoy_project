<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>